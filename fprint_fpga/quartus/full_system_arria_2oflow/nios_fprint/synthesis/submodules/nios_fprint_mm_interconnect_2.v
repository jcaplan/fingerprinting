// nios_fprint_mm_interconnect_2.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2015.05.21.13:53:26

`timescale 1 ps / 1 ps
module nios_fprint_mm_interconnect_2 (
		input  wire        clk_0_clk_clk,                                    //                                clk_0_clk.clk
		input  wire        cfpu_0_reset_reset_bridge_in_reset_reset,         //       cfpu_0_reset_reset_bridge_in_reset.reset
		input  wire        processor1_0_reset_reset_bridge_in_reset_reset,   // processor1_0_reset_reset_bridge_in_reset.reset
		input  wire [26:0] cfpu_0_oflow_address,                             //                             cfpu_0_oflow.address
		output wire        cfpu_0_oflow_waitrequest,                         //                                         .waitrequest
		input  wire        cfpu_0_oflow_write,                               //                                         .write
		input  wire [31:0] cfpu_0_oflow_writedata,                           //                                         .writedata
		output wire [7:0]  processor0_0_cpu_oflow_irq_0_avs_oflow_address,   //   processor0_0_cpu_oflow_irq_0_avs_oflow.address
		output wire        processor0_0_cpu_oflow_irq_0_avs_oflow_write,     //                                         .write
		output wire        processor0_0_cpu_oflow_irq_0_avs_oflow_read,      //                                         .read
		input  wire [31:0] processor0_0_cpu_oflow_irq_0_avs_oflow_readdata,  //                                         .readdata
		output wire [31:0] processor0_0_cpu_oflow_irq_0_avs_oflow_writedata, //                                         .writedata
		output wire [7:0]  processor1_0_cpu_oflow_irq_0_avs_oflow_address,   //   processor1_0_cpu_oflow_irq_0_avs_oflow.address
		output wire        processor1_0_cpu_oflow_irq_0_avs_oflow_write,     //                                         .write
		output wire        processor1_0_cpu_oflow_irq_0_avs_oflow_read,      //                                         .read
		input  wire [31:0] processor1_0_cpu_oflow_irq_0_avs_oflow_readdata,  //                                         .readdata
		output wire [31:0] processor1_0_cpu_oflow_irq_0_avs_oflow_writedata  //                                         .writedata
	);

	wire         cfpu_0_oflow_translator_avalon_universal_master_0_waitrequest;                                               // cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_waitrequest -> cfpu_0_oflow_translator:uav_waitrequest
	wire   [2:0] cfpu_0_oflow_translator_avalon_universal_master_0_burstcount;                                                // cfpu_0_oflow_translator:uav_burstcount -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] cfpu_0_oflow_translator_avalon_universal_master_0_writedata;                                                 // cfpu_0_oflow_translator:uav_writedata -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_writedata
	wire  [26:0] cfpu_0_oflow_translator_avalon_universal_master_0_address;                                                   // cfpu_0_oflow_translator:uav_address -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_address
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_lock;                                                      // cfpu_0_oflow_translator:uav_lock -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_lock
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_write;                                                     // cfpu_0_oflow_translator:uav_write -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_write
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_read;                                                      // cfpu_0_oflow_translator:uav_read -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] cfpu_0_oflow_translator_avalon_universal_master_0_readdata;                                                  // cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_readdata -> cfpu_0_oflow_translator:uav_readdata
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_debugaccess;                                               // cfpu_0_oflow_translator:uav_debugaccess -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] cfpu_0_oflow_translator_avalon_universal_master_0_byteenable;                                                // cfpu_0_oflow_translator:uav_byteenable -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_byteenable
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_readdatavalid;                                             // cfpu_0_oflow_translator_avalon_universal_master_0_agent:av_readdatavalid -> cfpu_0_oflow_translator:uav_readdatavalid
	wire         rsp_xbar_mux_src_endofpacket;                                                                                // rsp_xbar_mux:src_endofpacket -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                                      // rsp_xbar_mux:src_valid -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                                              // rsp_xbar_mux:src_startofpacket -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [96:0] rsp_xbar_mux_src_data;                                                                                       // rsp_xbar_mux:src_data -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_data
	wire   [1:0] rsp_xbar_mux_src_channel;                                                                                    // rsp_xbar_mux:src_channel -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_src_ready;                                                                                      // cfpu_0_oflow_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_waitrequest -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount;              // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_burstcount -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_burstcount
	wire  [31:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata;               // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_writedata -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_writedata
	wire  [26:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address;                 // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_address -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_address
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write;                   // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_write -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_write
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock;                    // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_lock -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_lock
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read;                    // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_read -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_read
	wire  [31:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata;                // processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_readdata -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_readdatavalid -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_debugaccess -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_debugaccess
	wire   [3:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable;              // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_byteenable -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator:uav_byteenable
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid;            // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_valid -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [97:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data;             // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_data -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready;            // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [97:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_ready -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                                // cmd_xbar_mux:src_endofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                                      // cmd_xbar_mux:src_valid -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                                              // cmd_xbar_mux:src_startofpacket -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [96:0] cmd_xbar_mux_src_data;                                                                                       // cmd_xbar_mux:src_data -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_data
	wire   [1:0] cmd_xbar_mux_src_channel;                                                                                    // cmd_xbar_mux:src_channel -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                                      // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_waitrequest -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount;              // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_burstcount -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_burstcount
	wire  [31:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata;               // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_writedata -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_writedata
	wire  [26:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address;                 // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_address -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_address
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write;                   // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_write -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_write
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock;                    // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_lock -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_lock
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read;                    // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_read -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_read
	wire  [31:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata;                // processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_readdata -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_readdatavalid -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_debugaccess -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_debugaccess
	wire   [3:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable;              // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:m0_byteenable -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator:uav_byteenable
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid;            // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_valid -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [97:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data;             // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_data -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready;            // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [97:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rf_sink_ready -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                                            // cmd_xbar_mux_001:src_endofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                                  // cmd_xbar_mux_001:src_valid -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                                          // cmd_xbar_mux_001:src_startofpacket -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [96:0] cmd_xbar_mux_001_src_data;                                                                                   // cmd_xbar_mux_001:src_data -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_data
	wire   [1:0] cmd_xbar_mux_001_src_channel;                                                                                // cmd_xbar_mux_001:src_channel -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                                  // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_endofpacket;                                      // cfpu_0_oflow_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_valid;                                            // cfpu_0_oflow_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_startofpacket;                                    // cfpu_0_oflow_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [96:0] cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_data;                                             // cfpu_0_oflow_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_ready;                                            // addr_router:sink_ready -> cfpu_0_oflow_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_src_endofpacket;                                                                                 // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         addr_router_src_valid;                                                                                       // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire         addr_router_src_startofpacket;                                                                               // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [96:0] addr_router_src_data;                                                                                        // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire   [1:0] addr_router_src_channel;                                                                                     // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire         addr_router_src_ready;                                                                                       // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid;                   // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [96:0] processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data;                    // processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router:sink_ready -> processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                                   // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                                         // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                                 // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [96:0] id_router_src_data;                                                                                          // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [1:0] id_router_src_channel;                                                                                       // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                                         // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid;                   // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [96:0] processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data;                    // processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_001:sink_ready -> processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                                               // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                                     // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                                             // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [96:0] id_router_001_src_data;                                                                                      // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire   [1:0] id_router_001_src_channel;                                                                                   // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                                     // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                                             // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                                   // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                                           // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [96:0] cmd_xbar_demux_src0_data;                                                                                    // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [1:0] cmd_xbar_demux_src0_channel;                                                                                 // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                                   // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                                             // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                                   // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                                           // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [96:0] cmd_xbar_demux_src1_data;                                                                                    // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [1:0] cmd_xbar_demux_src1_channel;                                                                                 // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                                   // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                                             // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                                   // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                                           // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [96:0] rsp_xbar_demux_src0_data;                                                                                    // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [1:0] rsp_xbar_demux_src0_channel;                                                                                 // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                                   // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                                         // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                                               // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                                       // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [96:0] rsp_xbar_demux_001_src0_data;                                                                                // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [1:0] rsp_xbar_demux_001_src0_channel;                                                                             // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                                               // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (27),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (27),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (0),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cfpu_0_oflow_translator (
		.clk                      (clk_0_clk_clk),                                                   //                       clk.clk
		.reset                    (cfpu_0_reset_reset_bridge_in_reset_reset),                        //                     reset.reset
		.uav_address              (cfpu_0_oflow_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cfpu_0_oflow_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cfpu_0_oflow_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cfpu_0_oflow_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cfpu_0_oflow_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cfpu_0_oflow_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cfpu_0_oflow_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cfpu_0_oflow_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cfpu_0_oflow_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cfpu_0_oflow_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cfpu_0_oflow_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (cfpu_0_oflow_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (cfpu_0_oflow_waitrequest),                                        //                          .waitrequest
		.av_write                 (cfpu_0_oflow_write),                                              //                          .write
		.av_writedata             (cfpu_0_oflow_writedata),                                          //                          .writedata
		.av_burstcount            (1'b1),                                                            //               (terminated)
		.av_byteenable            (4'b1111),                                                         //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                            //               (terminated)
		.av_begintransfer         (1'b0),                                                            //               (terminated)
		.av_chipselect            (1'b0),                                                            //               (terminated)
		.av_read                  (1'b0),                                                            //               (terminated)
		.av_readdata              (),                                                                //               (terminated)
		.av_readdatavalid         (),                                                                //               (terminated)
		.av_lock                  (1'b0),                                                            //               (terminated)
		.av_debugaccess           (1'b0),                                                            //               (terminated)
		.uav_clken                (),                                                                //               (terminated)
		.av_clken                 (1'b1),                                                            //               (terminated)
		.uav_response             (2'b00),                                                           //               (terminated)
		.av_response              (),                                                                //               (terminated)
		.uav_writeresponserequest (),                                                                //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                            //               (terminated)
		.av_writeresponserequest  (1'b0),                                                            //               (terminated)
		.av_writeresponsevalid    ()                                                                 //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) processor1_0_cpu_oflow_irq_0_avs_oflow_translator (
		.clk                      (clk_0_clk_clk),                                                                                     //                      clk.clk
		.reset                    (cfpu_0_reset_reset_bridge_in_reset_reset),                                                          //                    reset.reset
		.uav_address              (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (processor1_0_cpu_oflow_irq_0_avs_oflow_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (processor1_0_cpu_oflow_irq_0_avs_oflow_write),                                                      //                         .write
		.av_read                  (processor1_0_cpu_oflow_irq_0_avs_oflow_read),                                                       //                         .read
		.av_readdata              (processor1_0_cpu_oflow_irq_0_avs_oflow_readdata),                                                   //                         .readdata
		.av_writedata             (processor1_0_cpu_oflow_irq_0_avs_oflow_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                                  //              (terminated)
		.av_lock                  (),                                                                                                  //              (terminated)
		.av_chipselect            (),                                                                                                  //              (terminated)
		.av_clken                 (),                                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                                  //              (terminated)
		.uav_response             (),                                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) processor0_0_cpu_oflow_irq_0_avs_oflow_translator (
		.clk                      (clk_0_clk_clk),                                                                                     //                      clk.clk
		.reset                    (cfpu_0_reset_reset_bridge_in_reset_reset),                                                          //                    reset.reset
		.uav_address              (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (processor0_0_cpu_oflow_irq_0_avs_oflow_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (processor0_0_cpu_oflow_irq_0_avs_oflow_write),                                                      //                         .write
		.av_read                  (processor0_0_cpu_oflow_irq_0_avs_oflow_read),                                                       //                         .read
		.av_readdata              (processor0_0_cpu_oflow_irq_0_avs_oflow_readdata),                                                   //                         .readdata
		.av_writedata             (processor0_0_cpu_oflow_irq_0_avs_oflow_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                                  //              (terminated)
		.av_lock                  (),                                                                                                  //              (terminated)
		.av_chipselect            (),                                                                                                  //              (terminated)
		.av_clken                 (),                                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                                  //              (terminated)
		.uav_response             (),                                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                               //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (87),
		.PKT_PROTECTION_L          (85),
		.PKT_BEGIN_BURST           (80),
		.PKT_BURSTWRAP_H           (72),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BURST_SIZE_H          (75),
		.PKT_BURST_SIZE_L          (73),
		.PKT_BURST_TYPE_H          (77),
		.PKT_BURST_TYPE_L          (76),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_TRANS_EXCLUSIVE       (68),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (82),
		.PKT_SRC_ID_L              (82),
		.PKT_DEST_ID_H             (83),
		.PKT_DEST_ID_L             (83),
		.PKT_THREAD_ID_H           (84),
		.PKT_THREAD_ID_L           (84),
		.PKT_CACHE_H               (91),
		.PKT_CACHE_L               (88),
		.PKT_DATA_SIDEBAND_H       (79),
		.PKT_DATA_SIDEBAND_L       (79),
		.PKT_QOS_H                 (81),
		.PKT_QOS_L                 (81),
		.PKT_ADDR_SIDEBAND_H       (78),
		.PKT_ADDR_SIDEBAND_L       (78),
		.PKT_RESPONSE_STATUS_H     (93),
		.PKT_RESPONSE_STATUS_L     (92),
		.PKT_ORI_BURST_SIZE_L      (94),
		.PKT_ORI_BURST_SIZE_H      (96),
		.ST_DATA_W                 (97),
		.ST_CHANNEL_W              (2),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cfpu_0_oflow_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                            //       clk.clk
		.reset                   (cfpu_0_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.av_address              (cfpu_0_oflow_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (cfpu_0_oflow_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (cfpu_0_oflow_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (cfpu_0_oflow_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (cfpu_0_oflow_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (cfpu_0_oflow_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (cfpu_0_oflow_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (cfpu_0_oflow_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (cfpu_0_oflow_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (cfpu_0_oflow_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (cfpu_0_oflow_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_src_valid),                                                   //        rp.valid
		.rp_data                 (rsp_xbar_mux_src_data),                                                    //          .data
		.rp_channel              (rsp_xbar_mux_src_channel),                                                 //          .channel
		.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                             //          .endofpacket
		.rp_ready                (rsp_xbar_mux_src_ready),                                                   //          .ready
		.av_response             (),                                                                         // (terminated)
		.av_writeresponserequest (1'b0),                                                                     // (terminated)
		.av_writeresponsevalid   ()                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (80),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (82),
		.PKT_SRC_ID_L              (82),
		.PKT_DEST_ID_H             (83),
		.PKT_DEST_ID_L             (83),
		.PKT_BURSTWRAP_H           (72),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (87),
		.PKT_PROTECTION_L          (85),
		.PKT_RESPONSE_STATUS_H     (93),
		.PKT_RESPONSE_STATUS_L     (92),
		.PKT_BURST_SIZE_H          (75),
		.PKT_BURST_SIZE_L          (73),
		.PKT_ORI_BURST_SIZE_L      (94),
		.PKT_ORI_BURST_SIZE_H      (96),
		.ST_CHANNEL_W              (2),
		.ST_DATA_W                 (97),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                               //             clk.clk
		.reset                   (cfpu_0_reset_reset_bridge_in_reset_reset),                                                                    //       clk_reset.reset
		.m0_address              (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (98),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                               //       clk.clk
		.reset             (cfpu_0_reset_reset_bridge_in_reset_reset),                                                                    // clk_reset.reset
		.in_data           (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                                        // (terminated)
		.csr_readdata      (),                                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                        // (terminated)
		.almost_full_data  (),                                                                                                            // (terminated)
		.almost_empty_data (),                                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                                        // (terminated)
		.out_empty         (),                                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                                        // (terminated)
		.out_error         (),                                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                                        // (terminated)
		.out_channel       ()                                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (80),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (82),
		.PKT_SRC_ID_L              (82),
		.PKT_DEST_ID_H             (83),
		.PKT_DEST_ID_L             (83),
		.PKT_BURSTWRAP_H           (72),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (87),
		.PKT_PROTECTION_L          (85),
		.PKT_RESPONSE_STATUS_H     (93),
		.PKT_RESPONSE_STATUS_L     (92),
		.PKT_BURST_SIZE_H          (75),
		.PKT_BURST_SIZE_L          (73),
		.PKT_ORI_BURST_SIZE_L      (94),
		.PKT_ORI_BURST_SIZE_H      (96),
		.ST_CHANNEL_W              (2),
		.ST_DATA_W                 (97),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                               //             clk.clk
		.reset                   (cfpu_0_reset_reset_bridge_in_reset_reset),                                                                    //       clk_reset.reset
		.m0_address              (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                                                //                .channel
		.rf_sink_ready           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (98),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                               //       clk.clk
		.reset             (cfpu_0_reset_reset_bridge_in_reset_reset),                                                                    // clk_reset.reset
		.in_data           (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                                        // (terminated)
		.csr_readdata      (),                                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                        // (terminated)
		.almost_full_data  (),                                                                                                            // (terminated)
		.almost_empty_data (),                                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                                        // (terminated)
		.out_empty         (),                                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                                        // (terminated)
		.out_error         (),                                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                                        // (terminated)
		.out_channel       ()                                                                                                             // (terminated)
	);

	nios_fprint_mm_interconnect_2_addr_router addr_router (
		.sink_ready         (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cfpu_0_oflow_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                    //       src.ready
		.src_valid          (addr_router_src_valid),                                                    //          .valid
		.src_data           (addr_router_src_data),                                                     //          .data
		.src_channel        (addr_router_src_channel),                                                  //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                               //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_id_router id_router (
		.sink_ready         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (processor1_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                                     //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset),                                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                                               //       src.ready
		.src_valid          (id_router_src_valid),                                                                               //          .valid
		.src_data           (id_router_src_data),                                                                                //          .data
		.src_channel        (id_router_src_channel),                                                                             //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                                       //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                                          //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_id_router id_router_001 (
		.sink_ready         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (processor0_0_cpu_oflow_irq_0_avs_oflow_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                                     //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset),                                                          // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                                           //       src.ready
		.src_valid          (id_router_001_src_valid),                                                                           //          .valid
		.src_data           (id_router_001_src_data),                                                                            //          .data
		.src_channel        (id_router_001_src_channel),                                                                         //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                                                   //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                                      //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clk_0_clk_clk),                            //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_src_ready),                    //      sink.ready
		.sink_channel       (addr_router_src_channel),                  //          .channel
		.sink_data          (addr_router_src_data),                     //          .data
		.sink_startofpacket (addr_router_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),              //          .endofpacket
		.sink_valid         (addr_router_src_valid),                    //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                 //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clk_0_clk_clk),                            //       clk.clk
		.reset               (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                   //          .valid
		.src_data            (cmd_xbar_mux_src_data),                    //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)           //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clk_0_clk_clk),                            //       clk.clk
		.reset               (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux (
		.clk                (clk_0_clk_clk),                            //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                      //      sink.ready
		.sink_channel       (id_router_src_channel),                    //          .channel
		.sink_data          (id_router_src_data),                       //          .data
		.sink_startofpacket (id_router_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                //          .endofpacket
		.sink_valid         (id_router_src_valid),                      //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)           //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (clk_0_clk_clk),                            //       clk.clk
		.reset              (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                  //      sink.ready
		.sink_channel       (id_router_001_src_channel),                //          .channel
		.sink_data          (id_router_001_src_data),                   //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

	nios_fprint_mm_interconnect_2_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clk_0_clk_clk),                            //       clk.clk
		.reset               (cfpu_0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                   //          .valid
		.src_data            (rsp_xbar_mux_src_data),                    //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),            //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

endmodule
