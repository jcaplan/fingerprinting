// nios_fprint_mm_interconnect_2.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2014.07.11.16:17:56

`timescale 1 ps / 1 ps
module nios_fprint_mm_interconnect_2 (
		input  wire        clk_0_clk_clk,                            //                          clk_0_clk.clk
		input  wire        cfpu_0_reset_reset_bridge_in_reset_reset, // cfpu_0_reset_reset_bridge_in_reset.reset
		input  wire [26:0] cfpu_0_fifo_in_address,                   //                     cfpu_0_fifo_in.address
		output wire        cfpu_0_fifo_in_waitrequest,               //                                   .waitrequest
		input  wire        cfpu_0_fifo_in_read,                      //                                   .read
		output wire [31:0] cfpu_0_fifo_in_readdata,                  //                                   .readdata
		output wire [9:0]  monitor_fifo_0_out_address,               //                 monitor_fifo_0_out.address
		output wire        monitor_fifo_0_out_read,                  //                                   .read
		input  wire [31:0] monitor_fifo_0_out_readdata,              //                                   .readdata
		input  wire        monitor_fifo_0_out_waitrequest            //                                   .waitrequest
	);

	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_waitrequest;   // monitor_fifo_0_out_translator:uav_waitrequest -> cfpu_0_fifo_in_translator:uav_waitrequest
	wire   [2:0] cfpu_0_fifo_in_translator_avalon_universal_master_0_burstcount;    // cfpu_0_fifo_in_translator:uav_burstcount -> monitor_fifo_0_out_translator:uav_burstcount
	wire  [31:0] cfpu_0_fifo_in_translator_avalon_universal_master_0_writedata;     // cfpu_0_fifo_in_translator:uav_writedata -> monitor_fifo_0_out_translator:uav_writedata
	wire  [26:0] cfpu_0_fifo_in_translator_avalon_universal_master_0_address;       // cfpu_0_fifo_in_translator:uav_address -> monitor_fifo_0_out_translator:uav_address
	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_lock;          // cfpu_0_fifo_in_translator:uav_lock -> monitor_fifo_0_out_translator:uav_lock
	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_write;         // cfpu_0_fifo_in_translator:uav_write -> monitor_fifo_0_out_translator:uav_write
	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_read;          // cfpu_0_fifo_in_translator:uav_read -> monitor_fifo_0_out_translator:uav_read
	wire  [31:0] cfpu_0_fifo_in_translator_avalon_universal_master_0_readdata;      // monitor_fifo_0_out_translator:uav_readdata -> cfpu_0_fifo_in_translator:uav_readdata
	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_debugaccess;   // cfpu_0_fifo_in_translator:uav_debugaccess -> monitor_fifo_0_out_translator:uav_debugaccess
	wire   [3:0] cfpu_0_fifo_in_translator_avalon_universal_master_0_byteenable;    // cfpu_0_fifo_in_translator:uav_byteenable -> monitor_fifo_0_out_translator:uav_byteenable
	wire         cfpu_0_fifo_in_translator_avalon_universal_master_0_readdatavalid; // monitor_fifo_0_out_translator:uav_readdatavalid -> cfpu_0_fifo_in_translator:uav_readdatavalid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (27),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (27),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cfpu_0_fifo_in_translator (
		.clk                      (clk_0_clk_clk),                                                     //                       clk.clk
		.reset                    (cfpu_0_reset_reset_bridge_in_reset_reset),                          //                     reset.reset
		.uav_address              (cfpu_0_fifo_in_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cfpu_0_fifo_in_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cfpu_0_fifo_in_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cfpu_0_fifo_in_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cfpu_0_fifo_in_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cfpu_0_fifo_in_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cfpu_0_fifo_in_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cfpu_0_fifo_in_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cfpu_0_fifo_in_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cfpu_0_fifo_in_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cfpu_0_fifo_in_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (cfpu_0_fifo_in_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (cfpu_0_fifo_in_waitrequest),                                        //                          .waitrequest
		.av_read                  (cfpu_0_fifo_in_read),                                               //                          .read
		.av_readdata              (cfpu_0_fifo_in_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                              //               (terminated)
		.av_byteenable            (4'b1111),                                                           //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                              //               (terminated)
		.av_begintransfer         (1'b0),                                                              //               (terminated)
		.av_chipselect            (1'b0),                                                              //               (terminated)
		.av_readdatavalid         (),                                                                  //               (terminated)
		.av_write                 (1'b0),                                                              //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                              //               (terminated)
		.av_lock                  (1'b0),                                                              //               (terminated)
		.av_debugaccess           (1'b0),                                                              //               (terminated)
		.uav_clken                (),                                                                  //               (terminated)
		.av_clken                 (1'b1),                                                              //               (terminated)
		.uav_response             (2'b00),                                                             //               (terminated)
		.av_response              (),                                                                  //               (terminated)
		.uav_writeresponserequest (),                                                                  //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                              //               (terminated)
		.av_writeresponserequest  (1'b0),                                                              //               (terminated)
		.av_writeresponsevalid    ()                                                                   //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) monitor_fifo_0_out_translator (
		.clk                      (clk_0_clk_clk),                                                     //                      clk.clk
		.reset                    (cfpu_0_reset_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (cfpu_0_fifo_in_translator_avalon_universal_master_0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (cfpu_0_fifo_in_translator_avalon_universal_master_0_burstcount),    //                         .burstcount
		.uav_read                 (cfpu_0_fifo_in_translator_avalon_universal_master_0_read),          //                         .read
		.uav_write                (cfpu_0_fifo_in_translator_avalon_universal_master_0_write),         //                         .write
		.uav_waitrequest          (cfpu_0_fifo_in_translator_avalon_universal_master_0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (cfpu_0_fifo_in_translator_avalon_universal_master_0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (cfpu_0_fifo_in_translator_avalon_universal_master_0_byteenable),    //                         .byteenable
		.uav_readdata             (cfpu_0_fifo_in_translator_avalon_universal_master_0_readdata),      //                         .readdata
		.uav_writedata            (cfpu_0_fifo_in_translator_avalon_universal_master_0_writedata),     //                         .writedata
		.uav_lock                 (cfpu_0_fifo_in_translator_avalon_universal_master_0_lock),          //                         .lock
		.uav_debugaccess          (cfpu_0_fifo_in_translator_avalon_universal_master_0_debugaccess),   //                         .debugaccess
		.av_address               (monitor_fifo_0_out_address),                                        //      avalon_anti_slave_0.address
		.av_read                  (monitor_fifo_0_out_read),                                           //                         .read
		.av_readdata              (monitor_fifo_0_out_readdata),                                       //                         .readdata
		.av_waitrequest           (monitor_fifo_0_out_waitrequest),                                    //                         .waitrequest
		.av_write                 (),                                                                  //              (terminated)
		.av_writedata             (),                                                                  //              (terminated)
		.av_begintransfer         (),                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                  //              (terminated)
		.av_burstcount            (),                                                                  //              (terminated)
		.av_byteenable            (),                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                              //              (terminated)
		.av_writebyteenable       (),                                                                  //              (terminated)
		.av_lock                  (),                                                                  //              (terminated)
		.av_chipselect            (),                                                                  //              (terminated)
		.av_clken                 (),                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                              //              (terminated)
		.av_debugaccess           (),                                                                  //              (terminated)
		.av_outputenable          (),                                                                  //              (terminated)
		.uav_response             (),                                                                  //              (terminated)
		.av_response              (2'b00),                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                               //              (terminated)
	);

endmodule
