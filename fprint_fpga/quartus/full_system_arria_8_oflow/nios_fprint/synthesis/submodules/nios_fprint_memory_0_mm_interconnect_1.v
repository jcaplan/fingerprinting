// nios_fprint_memory_0_mm_interconnect_1.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2015.09.11.17:31:07

`timescale 1 ps / 1 ps
module nios_fprint_memory_0_mm_interconnect_1 (
		input  wire        clk_0_clk_clk,                                    //                                  clk_0_clk.clk
		input  wire        memory_delay_0_reset_reset_bridge_in_reset_reset, // memory_delay_0_reset_reset_bridge_in_reset.reset
		input  wire [22:0] memory_delay_0_avalon_master_address,             //               memory_delay_0_avalon_master.address
		output wire        memory_delay_0_avalon_master_waitrequest,         //                                           .waitrequest
		input  wire [3:0]  memory_delay_0_avalon_master_byteenable,          //                                           .byteenable
		input  wire        memory_delay_0_avalon_master_chipselect,          //                                           .chipselect
		output wire [31:0] memory_delay_0_avalon_master_readdata,            //                                           .readdata
		input  wire        memory_delay_0_avalon_master_write,               //                                           .write
		input  wire [31:0] memory_delay_0_avalon_master_writedata,           //                                           .writedata
		input  wire        memory_delay_0_avalon_master_clken,               //                                           .clken
		output wire [18:0] onchip_memoryMain_s1_address,                     //                       onchip_memoryMain_s1.address
		output wire        onchip_memoryMain_s1_write,                       //                                           .write
		input  wire [31:0] onchip_memoryMain_s1_readdata,                    //                                           .readdata
		output wire [31:0] onchip_memoryMain_s1_writedata,                   //                                           .writedata
		output wire [3:0]  onchip_memoryMain_s1_byteenable,                  //                                           .byteenable
		output wire        onchip_memoryMain_s1_chipselect,                  //                                           .chipselect
		output wire        onchip_memoryMain_s1_clken                        //                                           .clken
	);

	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_waitrequest;   // onchip_memoryMain_s1_translator:uav_waitrequest -> memory_delay_0_avalon_master_translator:uav_waitrequest
	wire   [2:0] memory_delay_0_avalon_master_translator_avalon_universal_master_0_burstcount;    // memory_delay_0_avalon_master_translator:uav_burstcount -> onchip_memoryMain_s1_translator:uav_burstcount
	wire  [31:0] memory_delay_0_avalon_master_translator_avalon_universal_master_0_writedata;     // memory_delay_0_avalon_master_translator:uav_writedata -> onchip_memoryMain_s1_translator:uav_writedata
	wire  [22:0] memory_delay_0_avalon_master_translator_avalon_universal_master_0_address;       // memory_delay_0_avalon_master_translator:uav_address -> onchip_memoryMain_s1_translator:uav_address
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_clken;         // memory_delay_0_avalon_master_translator:uav_clken -> onchip_memoryMain_s1_translator:uav_clken
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_lock;          // memory_delay_0_avalon_master_translator:uav_lock -> onchip_memoryMain_s1_translator:uav_lock
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_write;         // memory_delay_0_avalon_master_translator:uav_write -> onchip_memoryMain_s1_translator:uav_write
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_read;          // memory_delay_0_avalon_master_translator:uav_read -> onchip_memoryMain_s1_translator:uav_read
	wire  [31:0] memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdata;      // onchip_memoryMain_s1_translator:uav_readdata -> memory_delay_0_avalon_master_translator:uav_readdata
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_debugaccess;   // memory_delay_0_avalon_master_translator:uav_debugaccess -> onchip_memoryMain_s1_translator:uav_debugaccess
	wire   [3:0] memory_delay_0_avalon_master_translator_avalon_universal_master_0_byteenable;    // memory_delay_0_avalon_master_translator:uav_byteenable -> onchip_memoryMain_s1_translator:uav_byteenable
	wire         memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdatavalid; // onchip_memoryMain_s1_translator:uav_readdatavalid -> memory_delay_0_avalon_master_translator:uav_readdatavalid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (23),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (23),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (0),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (1),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) memory_delay_0_avalon_master_translator (
		.clk                      (clk_0_clk_clk),                                                                   //                       clk.clk
		.reset                    (memory_delay_0_reset_reset_bridge_in_reset_reset),                                //                     reset.reset
		.uav_address              (memory_delay_0_avalon_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (memory_delay_0_avalon_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (memory_delay_0_avalon_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (memory_delay_0_avalon_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (memory_delay_0_avalon_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (memory_delay_0_avalon_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (memory_delay_0_avalon_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (memory_delay_0_avalon_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (memory_delay_0_avalon_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.uav_clken                (memory_delay_0_avalon_master_translator_avalon_universal_master_0_clken),         //                          .clken
		.av_address               (memory_delay_0_avalon_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (memory_delay_0_avalon_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (memory_delay_0_avalon_master_byteenable),                                         //                          .byteenable
		.av_chipselect            (memory_delay_0_avalon_master_chipselect),                                         //                          .chipselect
		.av_readdata              (memory_delay_0_avalon_master_readdata),                                           //                          .readdata
		.av_write                 (memory_delay_0_avalon_master_write),                                              //                          .write
		.av_writedata             (memory_delay_0_avalon_master_writedata),                                          //                          .writedata
		.av_clken                 (memory_delay_0_avalon_master_clken),                                              //                          .clken
		.av_burstcount            (1'b1),                                                                            //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                            //               (terminated)
		.av_begintransfer         (1'b0),                                                                            //               (terminated)
		.av_read                  (1'b0),                                                                            //               (terminated)
		.av_readdatavalid         (),                                                                                //               (terminated)
		.av_lock                  (1'b0),                                                                            //               (terminated)
		.av_debugaccess           (1'b0),                                                                            //               (terminated)
		.uav_response             (2'b00),                                                                           //               (terminated)
		.av_response              (),                                                                                //               (terminated)
		.uav_writeresponserequest (),                                                                                //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                            //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                            //               (terminated)
		.av_writeresponsevalid    ()                                                                                 //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (19),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (23),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (1),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) onchip_memorymain_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                   //                      clk.clk
		.reset                    (memory_delay_0_reset_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (memory_delay_0_avalon_master_translator_avalon_universal_master_0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (memory_delay_0_avalon_master_translator_avalon_universal_master_0_burstcount),    //                         .burstcount
		.uav_read                 (memory_delay_0_avalon_master_translator_avalon_universal_master_0_read),          //                         .read
		.uav_write                (memory_delay_0_avalon_master_translator_avalon_universal_master_0_write),         //                         .write
		.uav_waitrequest          (memory_delay_0_avalon_master_translator_avalon_universal_master_0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (memory_delay_0_avalon_master_translator_avalon_universal_master_0_byteenable),    //                         .byteenable
		.uav_readdata             (memory_delay_0_avalon_master_translator_avalon_universal_master_0_readdata),      //                         .readdata
		.uav_writedata            (memory_delay_0_avalon_master_translator_avalon_universal_master_0_writedata),     //                         .writedata
		.uav_lock                 (memory_delay_0_avalon_master_translator_avalon_universal_master_0_lock),          //                         .lock
		.uav_debugaccess          (memory_delay_0_avalon_master_translator_avalon_universal_master_0_debugaccess),   //                         .debugaccess
		.uav_clken                (memory_delay_0_avalon_master_translator_avalon_universal_master_0_clken),         //                         .clken
		.av_address               (onchip_memoryMain_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (onchip_memoryMain_s1_write),                                                      //                         .write
		.av_readdata              (onchip_memoryMain_s1_readdata),                                                   //                         .readdata
		.av_writedata             (onchip_memoryMain_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (onchip_memoryMain_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (onchip_memoryMain_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (onchip_memoryMain_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                                //              (terminated)
		.av_begintransfer         (),                                                                                //              (terminated)
		.av_beginbursttransfer    (),                                                                                //              (terminated)
		.av_burstcount            (),                                                                                //              (terminated)
		.av_readdatavalid         (1'b0),                                                                            //              (terminated)
		.av_waitrequest           (1'b0),                                                                            //              (terminated)
		.av_writebyteenable       (),                                                                                //              (terminated)
		.av_lock                  (),                                                                                //              (terminated)
		.av_debugaccess           (),                                                                                //              (terminated)
		.av_outputenable          (),                                                                                //              (terminated)
		.uav_response             (),                                                                                //              (terminated)
		.av_response              (2'b00),                                                                           //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                            //              (terminated)
		.uav_writeresponsevalid   (),                                                                                //              (terminated)
		.av_writeresponserequest  (),                                                                                //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                             //              (terminated)
	);

endmodule
